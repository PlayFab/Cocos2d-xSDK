#ifndef PLAYFAB_CLIENTAPI_H_
#define PLAYFAB_CLIENTAPI_H_

#include "playfab/IHttpRequester.h"
#include "playfab/PlayFabError.h"
#include "playfab/PlayFabClientDataModels.h"
#include "playfab/PlayFabSettings.h"
#include <string>

namespace PlayFab
{
    class PlayFabClientAPI
    {
    public:
        typedef void(*GetPhotonAuthenticationTokenCallback)(ClientModels::GetPhotonAuthenticationTokenResult& result, void* userData);
        typedef void(*LoginWithAndroidDeviceIDCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithCustomIDCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithEmailAddressCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithFacebookCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithGameCenterCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithGoogleAccountCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithIOSDeviceIDCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithKongregateCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithPlayFabCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*LoginWithSteamCallback)(ClientModels::LoginResult& result, void* userData);
        typedef void(*RegisterPlayFabUserCallback)(ClientModels::RegisterPlayFabUserResult& result, void* userData);
        typedef void(*AddUsernamePasswordCallback)(ClientModels::AddUsernamePasswordResult& result, void* userData);
        typedef void(*GetAccountInfoCallback)(ClientModels::GetAccountInfoResult& result, void* userData);
        typedef void(*GetPlayFabIDsFromFacebookIDsCallback)(ClientModels::GetPlayFabIDsFromFacebookIDsResult& result, void* userData);
        typedef void(*GetPlayFabIDsFromGameCenterIDsCallback)(ClientModels::GetPlayFabIDsFromGameCenterIDsResult& result, void* userData);
        typedef void(*GetPlayFabIDsFromGoogleIDsCallback)(ClientModels::GetPlayFabIDsFromGoogleIDsResult& result, void* userData);
        typedef void(*GetPlayFabIDsFromKongregateIDsCallback)(ClientModels::GetPlayFabIDsFromKongregateIDsResult& result, void* userData);
        typedef void(*GetPlayFabIDsFromSteamIDsCallback)(ClientModels::GetPlayFabIDsFromSteamIDsResult& result, void* userData);
        typedef void(*GetUserCombinedInfoCallback)(ClientModels::GetUserCombinedInfoResult& result, void* userData);
        typedef void(*LinkAndroidDeviceIDCallback)(ClientModels::LinkAndroidDeviceIDResult& result, void* userData);
        typedef void(*LinkCustomIDCallback)(ClientModels::LinkCustomIDResult& result, void* userData);
        typedef void(*LinkFacebookAccountCallback)(ClientModels::LinkFacebookAccountResult& result, void* userData);
        typedef void(*LinkGameCenterAccountCallback)(ClientModels::LinkGameCenterAccountResult& result, void* userData);
        typedef void(*LinkGoogleAccountCallback)(ClientModels::LinkGoogleAccountResult& result, void* userData);
        typedef void(*LinkIOSDeviceIDCallback)(ClientModels::LinkIOSDeviceIDResult& result, void* userData);
        typedef void(*LinkKongregateCallback)(ClientModels::LinkKongregateAccountResult& result, void* userData);
        typedef void(*LinkSteamAccountCallback)(ClientModels::LinkSteamAccountResult& result, void* userData);
        typedef void(*SendAccountRecoveryEmailCallback)(ClientModels::SendAccountRecoveryEmailResult& result, void* userData);
        typedef void(*UnlinkAndroidDeviceIDCallback)(ClientModels::UnlinkAndroidDeviceIDResult& result, void* userData);
        typedef void(*UnlinkCustomIDCallback)(ClientModels::UnlinkCustomIDResult& result, void* userData);
        typedef void(*UnlinkFacebookAccountCallback)(ClientModels::UnlinkFacebookAccountResult& result, void* userData);
        typedef void(*UnlinkGameCenterAccountCallback)(ClientModels::UnlinkGameCenterAccountResult& result, void* userData);
        typedef void(*UnlinkGoogleAccountCallback)(ClientModels::UnlinkGoogleAccountResult& result, void* userData);
        typedef void(*UnlinkIOSDeviceIDCallback)(ClientModels::UnlinkIOSDeviceIDResult& result, void* userData);
        typedef void(*UnlinkKongregateCallback)(ClientModels::UnlinkKongregateAccountResult& result, void* userData);
        typedef void(*UnlinkSteamAccountCallback)(ClientModels::UnlinkSteamAccountResult& result, void* userData);
        typedef void(*UpdateUserTitleDisplayNameCallback)(ClientModels::UpdateUserTitleDisplayNameResult& result, void* userData);
        typedef void(*GetFriendLeaderboardCallback)(ClientModels::GetLeaderboardResult& result, void* userData);
        typedef void(*GetFriendLeaderboardAroundCurrentUserCallback)(ClientModels::GetFriendLeaderboardAroundCurrentUserResult& result, void* userData);
        typedef void(*GetFriendLeaderboardAroundPlayerCallback)(ClientModels::GetFriendLeaderboardAroundPlayerResult& result, void* userData);
        typedef void(*GetLeaderboardCallback)(ClientModels::GetLeaderboardResult& result, void* userData);
        typedef void(*GetLeaderboardAroundCurrentUserCallback)(ClientModels::GetLeaderboardAroundCurrentUserResult& result, void* userData);
        typedef void(*GetLeaderboardAroundPlayerCallback)(ClientModels::GetLeaderboardAroundPlayerResult& result, void* userData);
        typedef void(*GetPlayerStatisticsCallback)(ClientModels::GetPlayerStatisticsResult& result, void* userData);
        typedef void(*GetPlayerStatisticVersionsCallback)(ClientModels::GetPlayerStatisticVersionsResult& result, void* userData);
        typedef void(*GetUserDataCallback)(ClientModels::GetUserDataResult& result, void* userData);
        typedef void(*GetUserPublisherDataCallback)(ClientModels::GetUserDataResult& result, void* userData);
        typedef void(*GetUserPublisherReadOnlyDataCallback)(ClientModels::GetUserDataResult& result, void* userData);
        typedef void(*GetUserReadOnlyDataCallback)(ClientModels::GetUserDataResult& result, void* userData);
        typedef void(*GetUserStatisticsCallback)(ClientModels::GetUserStatisticsResult& result, void* userData);
        typedef void(*UpdatePlayerStatisticsCallback)(ClientModels::UpdatePlayerStatisticsResult& result, void* userData);
        typedef void(*UpdateUserDataCallback)(ClientModels::UpdateUserDataResult& result, void* userData);
        typedef void(*UpdateUserPublisherDataCallback)(ClientModels::UpdateUserDataResult& result, void* userData);
        typedef void(*UpdateUserStatisticsCallback)(ClientModels::UpdateUserStatisticsResult& result, void* userData);
        typedef void(*GetCatalogItemsCallback)(ClientModels::GetCatalogItemsResult& result, void* userData);
        typedef void(*GetStoreItemsCallback)(ClientModels::GetStoreItemsResult& result, void* userData);
        typedef void(*GetTitleDataCallback)(ClientModels::GetTitleDataResult& result, void* userData);
        typedef void(*GetTitleNewsCallback)(ClientModels::GetTitleNewsResult& result, void* userData);
        typedef void(*AddUserVirtualCurrencyCallback)(ClientModels::ModifyUserVirtualCurrencyResult& result, void* userData);
        typedef void(*ConfirmPurchaseCallback)(ClientModels::ConfirmPurchaseResult& result, void* userData);
        typedef void(*ConsumeItemCallback)(ClientModels::ConsumeItemResult& result, void* userData);
        typedef void(*GetCharacterInventoryCallback)(ClientModels::GetCharacterInventoryResult& result, void* userData);
        typedef void(*GetPurchaseCallback)(ClientModels::GetPurchaseResult& result, void* userData);
        typedef void(*GetUserInventoryCallback)(ClientModels::GetUserInventoryResult& result, void* userData);
        typedef void(*PayForPurchaseCallback)(ClientModels::PayForPurchaseResult& result, void* userData);
        typedef void(*PurchaseItemCallback)(ClientModels::PurchaseItemResult& result, void* userData);
        typedef void(*RedeemCouponCallback)(ClientModels::RedeemCouponResult& result, void* userData);
        typedef void(*ReportPlayerCallback)(ClientModels::ReportPlayerClientResult& result, void* userData);
        typedef void(*StartPurchaseCallback)(ClientModels::StartPurchaseResult& result, void* userData);
        typedef void(*SubtractUserVirtualCurrencyCallback)(ClientModels::ModifyUserVirtualCurrencyResult& result, void* userData);
        typedef void(*UnlockContainerInstanceCallback)(ClientModels::UnlockContainerItemResult& result, void* userData);
        typedef void(*UnlockContainerItemCallback)(ClientModels::UnlockContainerItemResult& result, void* userData);
        typedef void(*AddFriendCallback)(ClientModels::AddFriendResult& result, void* userData);
        typedef void(*GetFriendsListCallback)(ClientModels::GetFriendsListResult& result, void* userData);
        typedef void(*RemoveFriendCallback)(ClientModels::RemoveFriendResult& result, void* userData);
        typedef void(*SetFriendTagsCallback)(ClientModels::SetFriendTagsResult& result, void* userData);
        typedef void(*RegisterForIOSPushNotificationCallback)(ClientModels::RegisterForIOSPushNotificationResult& result, void* userData);
        typedef void(*RestoreIOSPurchasesCallback)(ClientModels::RestoreIOSPurchasesResult& result, void* userData);
        typedef void(*ValidateIOSReceiptCallback)(ClientModels::ValidateIOSReceiptResult& result, void* userData);
        typedef void(*GetCurrentGamesCallback)(ClientModels::CurrentGamesResult& result, void* userData);
        typedef void(*GetGameServerRegionsCallback)(ClientModels::GameServerRegionsResult& result, void* userData);
        typedef void(*MatchmakeCallback)(ClientModels::MatchmakeResult& result, void* userData);
        typedef void(*StartGameCallback)(ClientModels::StartGameResult& result, void* userData);
        typedef void(*AndroidDevicePushNotificationRegistrationCallback)(ClientModels::AndroidDevicePushNotificationRegistrationResult& result, void* userData);
        typedef void(*ValidateGooglePlayPurchaseCallback)(ClientModels::ValidateGooglePlayPurchaseResult& result, void* userData);
        typedef void(*LogEventCallback)(ClientModels::LogEventResult& result, void* userData);
        typedef void(*AddSharedGroupMembersCallback)(ClientModels::AddSharedGroupMembersResult& result, void* userData);
        typedef void(*CreateSharedGroupCallback)(ClientModels::CreateSharedGroupResult& result, void* userData);
        typedef void(*GetPublisherDataCallback)(ClientModels::GetPublisherDataResult& result, void* userData);
        typedef void(*GetSharedGroupDataCallback)(ClientModels::GetSharedGroupDataResult& result, void* userData);
        typedef void(*RemoveSharedGroupMembersCallback)(ClientModels::RemoveSharedGroupMembersResult& result, void* userData);
        typedef void(*UpdateSharedGroupDataCallback)(ClientModels::UpdateSharedGroupDataResult& result, void* userData);
        typedef void(*GetCloudScriptUrlCallback)(ClientModels::GetCloudScriptUrlResult& result, void* userData);
        typedef void(*RunCloudScriptCallback)(ClientModels::RunCloudScriptResult& result, void* userData);
        typedef void(*GetContentDownloadUrlCallback)(ClientModels::GetContentDownloadUrlResult& result, void* userData);
        typedef void(*GetAllUsersCharactersCallback)(ClientModels::ListUsersCharactersResult& result, void* userData);
        typedef void(*GetCharacterLeaderboardCallback)(ClientModels::GetCharacterLeaderboardResult& result, void* userData);
        typedef void(*GetCharacterStatisticsCallback)(ClientModels::GetCharacterStatisticsResult& result, void* userData);
        typedef void(*GetLeaderboardAroundCharacterCallback)(ClientModels::GetLeaderboardAroundCharacterResult& result, void* userData);
        typedef void(*GetLeaderboardForUserCharactersCallback)(ClientModels::GetLeaderboardForUsersCharactersResult& result, void* userData);
        typedef void(*GrantCharacterToUserCallback)(ClientModels::GrantCharacterToUserResult& result, void* userData);
        typedef void(*UpdateCharacterStatisticsCallback)(ClientModels::UpdateCharacterStatisticsResult& result, void* userData);
        typedef void(*GetCharacterDataCallback)(ClientModels::GetCharacterDataResult& result, void* userData);
        typedef void(*GetCharacterReadOnlyDataCallback)(ClientModels::GetCharacterDataResult& result, void* userData);
        typedef void(*UpdateCharacterDataCallback)(ClientModels::UpdateCharacterDataResult& result, void* userData);
        typedef void(*ValidateAmazonIAPReceiptCallback)(ClientModels::ValidateAmazonReceiptResult& result, void* userData);
        typedef void(*AcceptTradeCallback)(ClientModels::AcceptTradeResponse& result, void* userData);
        typedef void(*CancelTradeCallback)(ClientModels::CancelTradeResponse& result, void* userData);
        typedef void(*GetPlayerTradesCallback)(ClientModels::GetPlayerTradesResponse& result, void* userData);
        typedef void(*GetTradeStatusCallback)(ClientModels::GetTradeStatusResponse& result, void* userData);
        typedef void(*OpenTradeCallback)(ClientModels::OpenTradeResponse& result, void* userData);
        typedef void(*AttributeInstallCallback)(ClientModels::AttributeInstallResult& result, void* userData);

        static size_t Update();

        // Public, Client-Specific
        static void MultiStepClientLogin(bool needsAttribution);
        static bool IsClientLoggedIn();

        // ------------ Generated API calls
        static void GetPhotonAuthenticationToken(ClientModels::GetPhotonAuthenticationTokenRequest& request, GetPhotonAuthenticationTokenCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithAndroidDeviceID(ClientModels::LoginWithAndroidDeviceIDRequest& request, LoginWithAndroidDeviceIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithCustomID(ClientModels::LoginWithCustomIDRequest& request, LoginWithCustomIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithEmailAddress(ClientModels::LoginWithEmailAddressRequest& request, LoginWithEmailAddressCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithFacebook(ClientModels::LoginWithFacebookRequest& request, LoginWithFacebookCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithGameCenter(ClientModels::LoginWithGameCenterRequest& request, LoginWithGameCenterCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithGoogleAccount(ClientModels::LoginWithGoogleAccountRequest& request, LoginWithGoogleAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithIOSDeviceID(ClientModels::LoginWithIOSDeviceIDRequest& request, LoginWithIOSDeviceIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithKongregate(ClientModels::LoginWithKongregateRequest& request, LoginWithKongregateCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithPlayFab(ClientModels::LoginWithPlayFabRequest& request, LoginWithPlayFabCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LoginWithSteam(ClientModels::LoginWithSteamRequest& request, LoginWithSteamCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void RegisterPlayFabUser(ClientModels::RegisterPlayFabUserRequest& request, RegisterPlayFabUserCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void AddUsernamePassword(ClientModels::AddUsernamePasswordRequest& request, AddUsernamePasswordCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetAccountInfo(ClientModels::GetAccountInfoRequest& request, GetAccountInfoCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayFabIDsFromFacebookIDs(ClientModels::GetPlayFabIDsFromFacebookIDsRequest& request, GetPlayFabIDsFromFacebookIDsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayFabIDsFromGameCenterIDs(ClientModels::GetPlayFabIDsFromGameCenterIDsRequest& request, GetPlayFabIDsFromGameCenterIDsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayFabIDsFromGoogleIDs(ClientModels::GetPlayFabIDsFromGoogleIDsRequest& request, GetPlayFabIDsFromGoogleIDsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayFabIDsFromKongregateIDs(ClientModels::GetPlayFabIDsFromKongregateIDsRequest& request, GetPlayFabIDsFromKongregateIDsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayFabIDsFromSteamIDs(ClientModels::GetPlayFabIDsFromSteamIDsRequest& request, GetPlayFabIDsFromSteamIDsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetUserCombinedInfo(ClientModels::GetUserCombinedInfoRequest& request, GetUserCombinedInfoCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkAndroidDeviceID(ClientModels::LinkAndroidDeviceIDRequest& request, LinkAndroidDeviceIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkCustomID(ClientModels::LinkCustomIDRequest& request, LinkCustomIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkFacebookAccount(ClientModels::LinkFacebookAccountRequest& request, LinkFacebookAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkGameCenterAccount(ClientModels::LinkGameCenterAccountRequest& request, LinkGameCenterAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkGoogleAccount(ClientModels::LinkGoogleAccountRequest& request, LinkGoogleAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkIOSDeviceID(ClientModels::LinkIOSDeviceIDRequest& request, LinkIOSDeviceIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkKongregate(ClientModels::LinkKongregateAccountRequest& request, LinkKongregateCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LinkSteamAccount(ClientModels::LinkSteamAccountRequest& request, LinkSteamAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void SendAccountRecoveryEmail(ClientModels::SendAccountRecoveryEmailRequest& request, SendAccountRecoveryEmailCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkAndroidDeviceID(ClientModels::UnlinkAndroidDeviceIDRequest& request, UnlinkAndroidDeviceIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkCustomID(ClientModels::UnlinkCustomIDRequest& request, UnlinkCustomIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkFacebookAccount(UnlinkFacebookAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkGameCenterAccount(UnlinkGameCenterAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkGoogleAccount(UnlinkGoogleAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkIOSDeviceID(ClientModels::UnlinkIOSDeviceIDRequest& request, UnlinkIOSDeviceIDCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkKongregate(UnlinkKongregateCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlinkSteamAccount(UnlinkSteamAccountCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdateUserTitleDisplayName(ClientModels::UpdateUserTitleDisplayNameRequest& request, UpdateUserTitleDisplayNameCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetFriendLeaderboard(ClientModels::GetFriendLeaderboardRequest& request, GetFriendLeaderboardCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetFriendLeaderboardAroundCurrentUser(ClientModels::GetFriendLeaderboardAroundCurrentUserRequest& request, GetFriendLeaderboardAroundCurrentUserCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetFriendLeaderboardAroundPlayer(ClientModels::GetFriendLeaderboardAroundPlayerRequest& request, GetFriendLeaderboardAroundPlayerCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetLeaderboard(ClientModels::GetLeaderboardRequest& request, GetLeaderboardCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetLeaderboardAroundCurrentUser(ClientModels::GetLeaderboardAroundCurrentUserRequest& request, GetLeaderboardAroundCurrentUserCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetLeaderboardAroundPlayer(ClientModels::GetLeaderboardAroundPlayerRequest& request, GetLeaderboardAroundPlayerCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayerStatistics(ClientModels::GetPlayerStatisticsRequest& request, GetPlayerStatisticsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayerStatisticVersions(ClientModels::GetPlayerStatisticVersionsRequest& request, GetPlayerStatisticVersionsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetUserData(ClientModels::GetUserDataRequest& request, GetUserDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetUserPublisherData(ClientModels::GetUserDataRequest& request, GetUserPublisherDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetUserPublisherReadOnlyData(ClientModels::GetUserDataRequest& request, GetUserPublisherReadOnlyDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetUserReadOnlyData(ClientModels::GetUserDataRequest& request, GetUserReadOnlyDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetUserStatistics(GetUserStatisticsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdatePlayerStatistics(ClientModels::UpdatePlayerStatisticsRequest& request, UpdatePlayerStatisticsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdateUserData(ClientModels::UpdateUserDataRequest& request, UpdateUserDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdateUserPublisherData(ClientModels::UpdateUserDataRequest& request, UpdateUserPublisherDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdateUserStatistics(ClientModels::UpdateUserStatisticsRequest& request, UpdateUserStatisticsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCatalogItems(ClientModels::GetCatalogItemsRequest& request, GetCatalogItemsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetStoreItems(ClientModels::GetStoreItemsRequest& request, GetStoreItemsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetTitleData(ClientModels::GetTitleDataRequest& request, GetTitleDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetTitleNews(ClientModels::GetTitleNewsRequest& request, GetTitleNewsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void AddUserVirtualCurrency(ClientModels::AddUserVirtualCurrencyRequest& request, AddUserVirtualCurrencyCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void ConfirmPurchase(ClientModels::ConfirmPurchaseRequest& request, ConfirmPurchaseCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void ConsumeItem(ClientModels::ConsumeItemRequest& request, ConsumeItemCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCharacterInventory(ClientModels::GetCharacterInventoryRequest& request, GetCharacterInventoryCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPurchase(ClientModels::GetPurchaseRequest& request, GetPurchaseCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetUserInventory(GetUserInventoryCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void PayForPurchase(ClientModels::PayForPurchaseRequest& request, PayForPurchaseCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void PurchaseItem(ClientModels::PurchaseItemRequest& request, PurchaseItemCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void RedeemCoupon(ClientModels::RedeemCouponRequest& request, RedeemCouponCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void ReportPlayer(ClientModels::ReportPlayerClientRequest& request, ReportPlayerCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void StartPurchase(ClientModels::StartPurchaseRequest& request, StartPurchaseCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void SubtractUserVirtualCurrency(ClientModels::SubtractUserVirtualCurrencyRequest& request, SubtractUserVirtualCurrencyCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlockContainerInstance(ClientModels::UnlockContainerInstanceRequest& request, UnlockContainerInstanceCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UnlockContainerItem(ClientModels::UnlockContainerItemRequest& request, UnlockContainerItemCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void AddFriend(ClientModels::AddFriendRequest& request, AddFriendCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetFriendsList(ClientModels::GetFriendsListRequest& request, GetFriendsListCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void RemoveFriend(ClientModels::RemoveFriendRequest& request, RemoveFriendCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void SetFriendTags(ClientModels::SetFriendTagsRequest& request, SetFriendTagsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void RegisterForIOSPushNotification(ClientModels::RegisterForIOSPushNotificationRequest& request, RegisterForIOSPushNotificationCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void RestoreIOSPurchases(ClientModels::RestoreIOSPurchasesRequest& request, RestoreIOSPurchasesCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void ValidateIOSReceipt(ClientModels::ValidateIOSReceiptRequest& request, ValidateIOSReceiptCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCurrentGames(ClientModels::CurrentGamesRequest& request, GetCurrentGamesCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetGameServerRegions(ClientModels::GameServerRegionsRequest& request, GetGameServerRegionsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void Matchmake(ClientModels::MatchmakeRequest& request, MatchmakeCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void StartGame(ClientModels::StartGameRequest& request, StartGameCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void AndroidDevicePushNotificationRegistration(ClientModels::AndroidDevicePushNotificationRegistrationRequest& request, AndroidDevicePushNotificationRegistrationCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void ValidateGooglePlayPurchase(ClientModels::ValidateGooglePlayPurchaseRequest& request, ValidateGooglePlayPurchaseCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void LogEvent(ClientModels::LogEventRequest& request, LogEventCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void AddSharedGroupMembers(ClientModels::AddSharedGroupMembersRequest& request, AddSharedGroupMembersCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void CreateSharedGroup(ClientModels::CreateSharedGroupRequest& request, CreateSharedGroupCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPublisherData(ClientModels::GetPublisherDataRequest& request, GetPublisherDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetSharedGroupData(ClientModels::GetSharedGroupDataRequest& request, GetSharedGroupDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void RemoveSharedGroupMembers(ClientModels::RemoveSharedGroupMembersRequest& request, RemoveSharedGroupMembersCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdateSharedGroupData(ClientModels::UpdateSharedGroupDataRequest& request, UpdateSharedGroupDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCloudScriptUrl(ClientModels::GetCloudScriptUrlRequest& request, GetCloudScriptUrlCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void RunCloudScript(ClientModels::RunCloudScriptRequest& request, RunCloudScriptCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetContentDownloadUrl(ClientModels::GetContentDownloadUrlRequest& request, GetContentDownloadUrlCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetAllUsersCharacters(ClientModels::ListUsersCharactersRequest& request, GetAllUsersCharactersCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCharacterLeaderboard(ClientModels::GetCharacterLeaderboardRequest& request, GetCharacterLeaderboardCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCharacterStatistics(ClientModels::GetCharacterStatisticsRequest& request, GetCharacterStatisticsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetLeaderboardAroundCharacter(ClientModels::GetLeaderboardAroundCharacterRequest& request, GetLeaderboardAroundCharacterCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetLeaderboardForUserCharacters(ClientModels::GetLeaderboardForUsersCharactersRequest& request, GetLeaderboardForUserCharactersCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GrantCharacterToUser(ClientModels::GrantCharacterToUserRequest& request, GrantCharacterToUserCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdateCharacterStatistics(ClientModels::UpdateCharacterStatisticsRequest& request, UpdateCharacterStatisticsCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCharacterData(ClientModels::GetCharacterDataRequest& request, GetCharacterDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetCharacterReadOnlyData(ClientModels::GetCharacterDataRequest& request, GetCharacterReadOnlyDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void UpdateCharacterData(ClientModels::UpdateCharacterDataRequest& request, UpdateCharacterDataCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void ValidateAmazonIAPReceipt(ClientModels::ValidateAmazonReceiptRequest& request, ValidateAmazonIAPReceiptCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void AcceptTrade(ClientModels::AcceptTradeRequest& request, AcceptTradeCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void CancelTrade(ClientModels::CancelTradeRequest& request, CancelTradeCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetPlayerTrades(ClientModels::GetPlayerTradesRequest& request, GetPlayerTradesCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void GetTradeStatus(ClientModels::GetTradeStatusRequest& request, GetTradeStatusCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void OpenTrade(ClientModels::OpenTradeRequest& request, OpenTradeCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);
        static void AttributeInstall(ClientModels::AttributeInstallRequest& request, AttributeInstallCallback callback, ErrorCallback errorCallback = nullptr, void* userData = nullptr);

    private:
        // ------------ Private constructor, to enforce all-static class
        PlayFabClientAPI();

        // ------------ Generated result handlers
        static void OnGetPhotonAuthenticationTokenResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithAndroidDeviceIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithCustomIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithEmailAddressResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithFacebookResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithGameCenterResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithGoogleAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithIOSDeviceIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithKongregateResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithPlayFabResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLoginWithSteamResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnRegisterPlayFabUserResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnAddUsernamePasswordResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetAccountInfoResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayFabIDsFromFacebookIDsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayFabIDsFromGameCenterIDsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayFabIDsFromGoogleIDsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayFabIDsFromKongregateIDsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayFabIDsFromSteamIDsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetUserCombinedInfoResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkAndroidDeviceIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkCustomIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkFacebookAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkGameCenterAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkGoogleAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkIOSDeviceIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkKongregateResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLinkSteamAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnSendAccountRecoveryEmailResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkAndroidDeviceIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkCustomIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkFacebookAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkGameCenterAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkGoogleAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkIOSDeviceIDResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkKongregateResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlinkSteamAccountResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdateUserTitleDisplayNameResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetFriendLeaderboardResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetFriendLeaderboardAroundCurrentUserResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetFriendLeaderboardAroundPlayerResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetLeaderboardResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetLeaderboardAroundCurrentUserResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetLeaderboardAroundPlayerResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayerStatisticsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayerStatisticVersionsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetUserDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetUserPublisherDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetUserPublisherReadOnlyDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetUserReadOnlyDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetUserStatisticsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdatePlayerStatisticsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdateUserDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdateUserPublisherDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdateUserStatisticsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCatalogItemsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetStoreItemsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetTitleDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetTitleNewsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnAddUserVirtualCurrencyResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnConfirmPurchaseResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnConsumeItemResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCharacterInventoryResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPurchaseResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetUserInventoryResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnPayForPurchaseResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnPurchaseItemResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnRedeemCouponResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnReportPlayerResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnStartPurchaseResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnSubtractUserVirtualCurrencyResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlockContainerInstanceResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUnlockContainerItemResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnAddFriendResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetFriendsListResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnRemoveFriendResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnSetFriendTagsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnRegisterForIOSPushNotificationResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnRestoreIOSPurchasesResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnValidateIOSReceiptResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCurrentGamesResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetGameServerRegionsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnMatchmakeResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnStartGameResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnAndroidDevicePushNotificationRegistrationResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnValidateGooglePlayPurchaseResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnLogEventResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnAddSharedGroupMembersResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnCreateSharedGroupResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPublisherDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetSharedGroupDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnRemoveSharedGroupMembersResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdateSharedGroupDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCloudScriptUrlResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnRunCloudScriptResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetContentDownloadUrlResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetAllUsersCharactersResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCharacterLeaderboardResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCharacterStatisticsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetLeaderboardAroundCharacterResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetLeaderboardForUserCharactersResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGrantCharacterToUserResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdateCharacterStatisticsResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCharacterDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetCharacterReadOnlyDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnUpdateCharacterDataResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnValidateAmazonIAPReceiptResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnAcceptTradeResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnCancelTradeResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetPlayerTradesResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnGetTradeStatusResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnOpenTradeResult(int httpStatus, HttpRequest* request, void* userData);
        static void OnAttributeInstallResult(int httpStatus, HttpRequest* request, void* userData);

        static IHttpRequester* mHttpRequester;

        // Private, Client-Specific
        static std::string mUserSessionTicket;
    };
};
#endif
